import java.util.*;

class Solution {
    
    static String [] dia = {"",
        "",
        "abc",
        "def",
        "ghi",
        "jkl",
        "mno",
        "pqrs",
        "tuv",
        "wxyz",
    };
    
    static ArrayList<String> ans;
    
    static public ArrayList<String> possibleWords(int[] arr) {
        // code here
        
        List <Integer> re = new ArrayList<>();
        for(int a : arr){
            if(a != 0 && a !=1 ) re.add(a);
        }
        
        //Integer[] intArr = re.toArray(new Integer[0]);

        // If you need int[]
        // int[] intArr = arrToInt(arr);
        
        int n = re.size();
        int [] nArr = new int[n];
        for(int i=0;i<n;i++){
            nArr[i]=re.get(i);
        }
        
        ans = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        if(n==0){
            return ans;
        }
        backtrack(0,sb,nArr,n-1);
        return ans;
    }
    
    static void backtrack(int j,StringBuilder sb,int[] arr,int n){
        if(j==n){
            
            for(int i=0;i<dia[arr[j]].length();i++){
                sb.append(dia[arr[j]].charAt(i));
                ans.add(sb.toString());
                sb.deleteCharAt(j);
            }
            if(arr[j]==1 || arr[j]==0){
                ans.add(sb.toString());
            }
            return;
        }
        
        
        for(int i=0;i<dia[arr[j]].length();i++){
            sb.append(dia[arr[j]].charAt(i));
            backtrack(j+1,sb,arr,n);
            sb.deleteCharAt(j);
        }
    }

    public static void main(String [] args){
        int [] a = {7,8,5};
        System.out.println("Input: 7,8,5 Output: "+possibleWords(a));
        int [] b = {1,2,0,3};
        System.out.println("Input: 7,8,5 Output: "+possibleWords(b));
        int [] c = {7,8,0};
        System.out.println("Input: 7,8,5 Output: "+possibleWords(c));
        int [] d = {2,0};
        System.out.println("Input: 7,8,5 Output: "+possibleWords(d));
    }
}

/*
You are given a keypad (as shown in the diagram) and an array arr[ ] containing digits, your task is to list all possible words in any order which can be generated by pressing numbers in arr[] sequentially.

Note: Number 0 and 1 do not map to any letters.
You can return the words in any order, the driver code will print them in sorted order.



Examples :

Input: arr[] = [2, 3]
Output: [ad, ae, af, bd, be, bf, cd, ce, cf]
Explanation: When we press 2 and 3 total 3 x 3 = 9 possible words formed.
Input: arr[] = [2]
Output: [a, b, c]
Explanation: When we press 2 total 3 possible words formed.

 */